"use client";
import Button from "./Button";
import React, { useContext, useState } from "react";
import Card from "./Card";
import { generateImage } from "@/action/imageAction";
import { ImageContext, useImageContext } from "@/context/imageContext";
import Loader from "./Loader";

const Input = () => {
  const num = useImageContext();
  let height = num.dimention.height;
  let width = num.dimention.width;
  let cradit = num.coin;

  let total = cradit;

  const [images, setImage] = useState<string[]>([]);

  const [prompt, setPrompt] = useState<string>("");

  const handleClick = async () => {
    num.setLoader(true);
    setPrompt("");
    try {
      if (cradit === 0) {
        alert("You dont have enough tokens");
        return;
      }

      var newImage = await generateImage(prompt, num.imageNum, width, height); // Assuming generateImage is async
      setImage([...newImage, ...images]);

      num.setCoin(cradit - 10);
    } catch (err: any) {
      alert(err.message);
    } finally {
      setTimeout(() => {
        num.setLoader(false);
      }, 5000);
    }
  };
  return (
    <div className=" w-full min-h-screen px-3 md:px-1 pt-14  bg-black">
      <div className="h-full w-full ">
        <form
          action={handleClick}
          className="   h-14 w-full flex items-center  rounded-lg"
        >
          {/* Suffle Box  */}

          {/* input box  */}
          <div className="h-full w-full relative">
            <input
              name="prompt"
              type="text"
              value={prompt}
              onChange={(e) => setPrompt(e.target.value)}
              className="h-full w-full pl-14 bg-[#101622] outline-none focus:border rounded-lg focus:border-violet-600 "
              placeholder="Type a prmpt..."
            />
            <div className=" w-10 absolute top-2 left-2  ">
              <svg
                viewBox="0 0 46 47"
                focusable="false"
                className="chakra-icon css-ihtz0m"
              >
                <path
                  d="M40.25 20.1458C39.4565 20.1458 38.8125 20.7898 38.8125 21.5833V25.7788L31.1266 18.0949C29.8616 16.828 27.6384 16.828 26.3734 18.0949L17.25 27.2163L15.7933 25.7615C14.5283 24.4946 12.305 24.4946 11.04 25.7615L7.1875 29.6141V13.9167C7.1875 10.8941 8.47742 9.60417 11.5 9.60417H24.9167C25.7102 9.60417 26.3542 8.96017 26.3542 8.16667C26.3542 7.37317 25.7102 6.72917 24.9167 6.72917H11.5C6.8655 6.72917 4.3125 9.28217 4.3125 13.9167V33.0833C4.3125 37.7178 6.8655 40.2708 11.5 40.2708H34.5C39.1345 40.2708 41.6875 37.7178 41.6875 33.0833V21.5833C41.6875 20.7898 41.0435 20.1458 40.25 20.1458ZM34.5 37.3958H11.5C8.67867 37.3958 7.38294 36.2534 7.22002 33.6449L13.0716 27.7933C13.315 27.5518 13.5162 27.5518 13.7597 27.7933L15.5596 29.593C16.4547 30.49 18.0436 30.4881 18.9348 29.593L28.403 20.1248C28.6464 19.8833 28.8477 19.8833 29.0911 20.1248L38.8088 29.8424V33.0833C38.8126 36.1059 37.5226 37.3958 34.5 37.3958ZM15.3333 15.3542C16.6558 15.3542 17.7292 16.4275 17.7292 17.75C17.7292 19.0725 16.6558 20.1458 15.3333 20.1458C14.0108 20.1458 12.9375 19.0725 12.9375 17.75C12.9375 16.4275 14.0108 15.3542 15.3333 15.3542ZM31.1458 10.0833C31.1458 9.28983 31.7898 8.64583 32.5833 8.64583H34.9792V6.25C34.9792 5.4565 35.6232 4.8125 36.4167 4.8125C37.2102 4.8125 37.8542 5.4565 37.8542 6.25V8.64583H40.25C41.0435 8.64583 41.6875 9.28983 41.6875 10.0833C41.6875 10.8768 41.0435 11.5208 40.25 11.5208H37.8542V13.9167C37.8542 14.7102 37.2102 15.3542 36.4167 15.3542C35.6232 15.3542 34.9792 14.7102 34.9792 13.9167V11.5208H32.5833C31.7898 11.5208 31.1458 10.8768 31.1458 10.0833Z"
                  fill="currentColor"
                ></path>
              </svg>
            </div>
            <div className="absolute   right-2 bottom-[2px] ">
              <Button>
                {num.loader ? (
                  <Loader />
                ) : (
                  <div className="flex gap-1">
                    <h1>Generate </h1>
                    <div className="flex items-center">
                      <svg
                        viewBox="0 0 17 16"
                        focusable="false"
                        className="h-7 w-7 stroke-white"
                        xmlns="http://www.w3.org/2000/svg"
                      >
                        <path
                          d="M5.5 12.0067C5.5 12.4933 5.64667 12.9333 5.92 13.3133C4.13334 13.2 2.5 12.5467 2.5 11.34V10.7533C3.2 11.3 4.23333 11.6667 5.5 11.7867V12.0067ZM5.52665 9.29333C5.51999 9.3 5.52002 9.30665 5.52002 9.31331C5.50669 9.37998 5.5 9.44668 5.5 9.51335V10.7867C3.88667 10.6 2.5 9.96001 2.5 8.84668V8.26001C3.2 8.81334 4.24002 9.18 5.52002 9.29333H5.52665ZM8.12667 6.85335C7.11334 7.16669 6.32 7.67999 5.88 8.31999C4.10667 8.20665 2.5 7.55335 2.5 6.35335V5.89998C3.37333 6.58665 4.77333 6.98665 6.5 6.98665C7.08 6.98665 7.62667 6.94002 8.12667 6.85335ZM10.5 5.89998V6.35335C10.5 6.41335 10.4933 6.46669 10.4867 6.52002C9.95999 6.52002 9.45999 6.56665 8.99333 6.64665C9.59333 6.46665 10.1 6.21332 10.5 5.89998ZM6.5 2C4.5 2 2.5 2.66666 2.5 3.99333C2.5 5.33333 4.5 5.98665 6.5 5.98665C8.5 5.98665 10.5 5.33333 10.5 3.99333C10.5 2.66666 8.5 2 6.5 2ZM10.5 12.5067C8.82667 12.5067 7.4 12.0667 6.5 11.3534V12.0067C6.5 13.3333 8.5 14 10.5 14C12.5 14 14.5 13.3333 14.5 12.0067V11.3534C13.6 12.0667 12.1733 12.5067 10.5 12.5067ZM10.5 7.52002C8.29333 7.52002 6.5 8.41335 6.5 9.51335C6.5 10.6133 8.29333 11.5067 10.5 11.5067C12.7067 11.5067 14.5 10.6133 14.5 9.51335C14.5 8.41335 12.7067 7.52002 10.5 7.52002Z"
                          fill="url(#coin-icon-gradient-1-:ra:)"
                        ></path>
                        <defs>
                          <linearGradient
                            id="coin-icon-gradient-1-:ra:"
                            x1="-2.66"
                            y1="2"
                            x2="16.0891"
                            y2="-0.962706"
                            gradientUnits="userSpaceOnUse"
                          >
                            <stop stop-color="#FA5560"></stop>
                            <stop offset="0.5" stop-color="#B14BF4"></stop>
                            <stop offset="1" stop-color="#4D91FF"></stop>
                          </linearGradient>
                        </defs>
                      </svg>
                      <span>10</span>
                    </div>
                  </div>
                )}
              </Button>
            </div>
          </div>
        </form>

        <div className="mt-12 flex flex-wrap  gap-4 ">
          {images.map((imgUrl) => (
            <Card key={imgUrl} url={imgUrl} height={height} width={width} />
          ))}
        </div>
      </div>
    </div>
  );
};

export default Input;

{
  /* <div className=" w-10">
          <svg
            viewBox="0 0 46 47"
            focusable="false"
            className="chakra-icon css-ihtz0m"
          >
            <path
              d="M40.25 20.1458C39.4565 20.1458 38.8125 20.7898 38.8125 21.5833V25.7788L31.1266 18.0949C29.8616 16.828 27.6384 16.828 26.3734 18.0949L17.25 27.2163L15.7933 25.7615C14.5283 24.4946 12.305 24.4946 11.04 25.7615L7.1875 29.6141V13.9167C7.1875 10.8941 8.47742 9.60417 11.5 9.60417H24.9167C25.7102 9.60417 26.3542 8.96017 26.3542 8.16667C26.3542 7.37317 25.7102 6.72917 24.9167 6.72917H11.5C6.8655 6.72917 4.3125 9.28217 4.3125 13.9167V33.0833C4.3125 37.7178 6.8655 40.2708 11.5 40.2708H34.5C39.1345 40.2708 41.6875 37.7178 41.6875 33.0833V21.5833C41.6875 20.7898 41.0435 20.1458 40.25 20.1458ZM34.5 37.3958H11.5C8.67867 37.3958 7.38294 36.2534 7.22002 33.6449L13.0716 27.7933C13.315 27.5518 13.5162 27.5518 13.7597 27.7933L15.5596 29.593C16.4547 30.49 18.0436 30.4881 18.9348 29.593L28.403 20.1248C28.6464 19.8833 28.8477 19.8833 29.0911 20.1248L38.8088 29.8424V33.0833C38.8126 36.1059 37.5226 37.3958 34.5 37.3958ZM15.3333 15.3542C16.6558 15.3542 17.7292 16.4275 17.7292 17.75C17.7292 19.0725 16.6558 20.1458 15.3333 20.1458C14.0108 20.1458 12.9375 19.0725 12.9375 17.75C12.9375 16.4275 14.0108 15.3542 15.3333 15.3542ZM31.1458 10.0833C31.1458 9.28983 31.7898 8.64583 32.5833 8.64583H34.9792V6.25C34.9792 5.4565 35.6232 4.8125 36.4167 4.8125C37.2102 4.8125 37.8542 5.4565 37.8542 6.25V8.64583H40.25C41.0435 8.64583 41.6875 9.28983 41.6875 10.0833C41.6875 10.8768 41.0435 11.5208 40.25 11.5208H37.8542V13.9167C37.8542 14.7102 37.2102 15.3542 36.4167 15.3542C35.6232 15.3542 34.9792 14.7102 34.9792 13.9167V11.5208H32.5833C31.7898 11.5208 31.1458 10.8768 31.1458 10.0833Z"
              fill="currentColor"
            ></path>
          </svg>
        </div> */
}

{
  /**/
}
